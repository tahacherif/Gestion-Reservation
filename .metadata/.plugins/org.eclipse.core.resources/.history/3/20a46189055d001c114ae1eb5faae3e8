package model;

import java.time.LocalDate;
import java.time.LocalTime;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;

import Controller.FactureController;
import Controller.ReservationController;
import Controller.SalleController;
import DAO.DemandeurDAO;
import DAO.FactureDAO;
import DAO.SalleDAO;
import metier.Facture;
import metier.Reservation;
import metier.Salle;
import DAO.PlageHoraireDAO;
import DAO.ReservationDAO;


public class Reservation {
	private String num_reservation;

	private int num_salle;

	private int code_demandeur;

	private int num_plageHoraire;
	
	private LocalTime td;
	private LocalTime tf;

	private static List<Reservation> lesReservation=new ArrayList<Reservation>();

	public Reservation() 
	{}

	public Reservation(int num_salle,int code_demandeur, int num_plageHoraire) {
		this.num_reservation = genererNumero();
		this.num_salle = num_salle;
		this.code_demandeur = code_demandeur;
		this.num_plageHoraire = num_plageHoraire;
	}

	public static List<Reservation> getLesReservation() {
		return lesReservation;
	}
	public static void setLesReservation(List<Reservation> lesReservation) {
		Reservation.lesReservation = lesReservation;
	}
	public void setNum_reservation(String num_reservation) {
		this.num_reservation = num_reservation;
	}
	public String getNum_reservation() {
		return num_reservation;
	}


	public  Salle getSalle() {
		return SalleDAO.findByNum(num_salle);
	}

	public int getNum_salle() {
		return num_salle;
	}
	public void setNum_salle(int num_salle) {
		this.num_salle = num_salle;
	}





	public Demandeur getDemandeur() {
		return DemandeurDAO.findByCode(code_demandeur);
	}
	public int getCode_demandeur() {
		return code_demandeur;
	}

	public void setCode_demandeur(int code_demandeur) {
		this.code_demandeur = code_demandeur;
	}


	public PlageHoraire getPlageHoraire() {
		return PlageHoraireDAO.findByNum(num_plageHoraire);
	}
	public int getNum_plageHoraire() {
		return num_plageHoraire;
	}
	public void setNum_plageHoraire(int num_plageHoraire) {
		this.num_plageHoraire = num_plageHoraire;
	}







	public static String genererNumero()
	{
		String num=null;
		int nb=lesReservation.size();
		if (nb==0)
			nb=1;
		num="RES"+ nb;
		return num;
	}



	Salle s = getSalle();

	public static  double CalculPrixLocation( Salle s, LocalTime time1 ,LocalTime time2) {
		double montant=0;


		long diff = ChronoUnit.HOURS.between(time1,time2);
		if(diff<=3)
		{
			if(s.getSuperfice()<=500)

				montant=diff*200 + (s.getNbreEquipement()*5);
			else
				montant=diff*250 + (s.getNbreEquipement()*5);
		}
		else if(diff>3)

		{
			if(s.getSuperfice()<=500)
				montant=diff*180 + (s.getNbreEquipement()*5);

			else
				montant=diff*300 + (s.getNbreEquipement()*5);
		}

		return montant;
	}



	public boolean Annuler() {

		if(lesReservation.contains(this)) {
			lesReservation.remove(this);
			ReservationDAO.annuler(this.num_reservation);
			System.out.println("Reservation annulée!");
			return true;
		}
		System.out.println("Reservation non trouve!");
		return false;
	}
	public boolean confirmer() {
		Reservation.lesReservation.add(this);
		ReservationDAO.CREATE(this);
		Salle s=SalleDAO.findByNum(num_salle);
		  s.setEtat(1);
		SalleDAO.update(s);
		Facture f=new Facture(Facture.genererNumero(),LocalDate.now() ,this.CalculPrixLocation(s,), this);
		Facture.getLesFactures().add(f);
		FactureDAO.CREATE(f);

	}

}

